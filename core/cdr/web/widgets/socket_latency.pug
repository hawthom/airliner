style.
  .wdg-label{
    float:left;
    margin-right:2px;
  }
  .wdg-socket-latency-value{
    float:right;
  }
  .wdg-socket-latency-text{
    margin-right:5px;
    float:left;
    font-size: xx-small;
  }

div.wdg-socket-latency(title='Socket Latency')
  div.wdg-label Socket Latency 
  div.wdg-socket-latency-text -
  div.wdg-socket-latency-value -

script.
  var sparkLineOptions = {
    width: 30,
    height: 20,
    startColor: 'transperant',
    maxColor: 'red',
    minColor: 'green',
  }

  $('.wdg-socket-latency-value').toArray().forEach((wdgFlot)=>{
      
      
      if($(wdgFlot).attr('sparklineIndex') == undefined | $(wdgFlot).attr('sparklineIndex') == null){
        var index = sparklineIndex.push(new Sparkline(wdgFlot,sparkLineOptions)) - 1;
        $(wdgFlot).attr('sparklineIndex',index);
      }

    });
  
  if(latency == undefined | latency == null ){
    var latency = [];
  }
    
    
  if( WdgSocketLatencyInterval == undefined){

    
    var WdgSocketLatencyInterval = setInterval( () => {
      
      try{
        
        session.ping(Date.now());
        
        
      }
      catch(e){
        cu.logError('Widget | Socket failed to send ping error=', e.message);
      }
      
    }, 2000 );
    
    session.pong(function(StartTime) {
      if( StartTime != undefined ){
        
        window.latency.push(Date.now() - StartTime);
        if ( window.latency.length == 20 ) {
          window.latency.splice( 0, 1 );
        }
        
      $('.wdg-socket-latency-value').toArray().forEach((wdgFlot)=>{
        sparklineIndex[$(wdgFlot).attr('sparklineIndex')].draw(window.latency);
      });
      
      $('.wdg-socket-latency-text').toArray().forEach((wdgTextVal)=>{
        $(wdgTextVal).text(window.latency[window.latency.length -1].toFixed(0) + ' ms');
      });
      
      }
    });
    
    widgetIntervalCollection.push({
      interval:WdgSocketLatencyInterval,
      bindclass:'wdg-socket-latency-value'
      })
  }
  
