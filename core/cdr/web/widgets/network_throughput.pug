style.
  .wdg-label{
    float:left;
    margin-right:2px;
  }
  .wdg-network-throughput-value{
    float:right;
  }
  .wdg-network-throughput-text{
    margin-right:5px;
    float:left;
    font-size: xx-small;
  }

div.wdg-network
  div.wdg-label Network Throughput 
  div.wdg-network-throughput-text - 
  div.wdg-network-throughput-value -

script.
  var sparkLineOptions = {
    width: 30,
    height: 20,
    startColor: 'transperant',
    maxColor: 'red',
    minColor: 'green',
  }

  $('.wdg-network-throughput-value').toArray().forEach((wdgFlot)=>{
      
      
      if($(wdgFlot).attr('sparklineIndex') == undefined | $(wdgFlot).attr('sparklineIndex') == null){
        var index = sparklineIndex.push(new Sparkline(wdgFlot,sparkLineOptions)) - 1;
        $(wdgFlot).attr('sparklineIndex',index);
      }

    });
    
  if(networkThroughput == undefined | networkThroughput == null ){
    var networkThroughput = [];
  }
    
  if( WdgNetworkThroughputInterval == undefined){

    
    var WdgNetworkThroughputInterval = setInterval( () => {
      
      
      try{
        
        var sizeTransferedAccumulated = 0;
        
        var entries = performance.getEntries( {
          "initiatorType": "xmlhttprequest"
        } );
        for ( var i in entries ) {
          try {
            if(typeof entries[ i ].transferSize == 'number'){
              sizeTransferedAccumulated +=  entries[ i ].transferSize;
            }
          } catch ( e ) {
            cu.logError( 'Network Throughput | error calculating network throughput' )
          }
        }
        
        networkThroughput.push( sizeTransferedAccumulated / entries.length )
        if ( networkThroughput.length == 10 ) {
          networkThroughput.splice( 0, 1 );
        }

        
      }
      catch(e){
        cu.logError('Widget | session connection widget errored out');
      }
      
      $('.wdg-network-throughput-value').toArray().forEach((wdgFlot)=>{
          sparklineIndex[$(wdgFlot).attr('sparklineIndex')].draw(networkThroughput);
        });
        
      $('.wdg-network-throughput-text').toArray().forEach((wdgTextVal)=>{
          var val = networkThroughput[networkThroughput.length - 1 ]/1000 /* in kbytes */
          $(wdgTextVal).text(val.toFixed(1) + ' kb');
        });
      
    }, 1000 );
    
    
    
    widgetIntervalCollection.push({
      interval:WdgNetworkThroughputInterval,
      bindclass:'wdg-network-throughput-value'
      })
  }

  if( WdgNetworkPerformanceInterval == undefined){
    
    var WdgNetworkPerformanceInterval = setInterval(()=>{
        
        performance.clearResourceTimings();
      
      },10000);
      
    widgetIntervalCollection.push({
      interval:WdgNetworkPerformanceInterval,
      bindclass:'wdg-network'
      })
  }
