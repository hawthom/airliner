extends ../../web_includes/common/layout

block includes
  include ../../web_includes/common/common_includes.pug

block header

block main
  .row.row-fluid
    button.btn.btn-xs.btn-primary(onClick="exportTableToCSV()" style="margin:5px ;width:100px ;height:30px") Export CSV 
    |
  style.

    .table > thead > tr > td.critical,
    .table > tbody > tr > td.critical,
    .table > tfoot > tr > td.critical,
    .table > thead > tr > th.critical,
    .table > tbody > tr > th.critical,
    .table > tfoot > tr > th.critical,
    .table > thead > tr.critical > td,
    .table > tbody > tr.critical > td,
    .table > tfoot > tr.critical > td,
    .table > thead > tr.critical > th,
    .table > tbody > tr.critical > th,
    .table > tfoot > tr.critical > th
    {
      color: #b94a48;
      background-color: #f2dede;
      border-color: #f2dede;
    }
    
    .table > thead > tr > td.error,
    .table > tbody > tr > td.error,
    .table > tfoot > tr > td.error,
    .table > thead > tr > th.error,
    .table > tbody > tr > th.error,
    .table > tfoot > tr > th.error,
    .table > thead > tr.error > td,
    .table > tbody > tr.error > td,
    .table > tfoot > tr.error > td,
    .table > thead > tr.error > th,
    .table > tbody > tr.error > th,
    .table > tfoot > tr.error > th
    {
      color: #b94a48;
      background-color: #fcf8e3;
      border-color: #f2dede;
    }
    
    .table > thead > tr > td.info,
    .table > tbody > tr > td.info,
    .table > tfoot > tr > td.info,
    .table > thead > tr > th.info,
    .table > tbody > tr > th.info,
    .table > tfoot > tr > th.info,
    .table > thead > tr.info > td,
    .table > tbody > tr.info > td,
    .table > tfoot > tr.info > td,
    .table > thead > tr.info > th,
    .table > tbody > tr.info > th,
    .table > tfoot > tr.info > th
    {
      color: #3a87ad;
      background-color: #d9edf7;
      border-color: #bce8f1;
    }
    
    .table > thead > tr > td.debug,
    .table > tbody > tr > td.debug,
    .table > tfoot > tr > td.debug,
    .table > thead > tr > th.debug,
    .table > tbody > tr > th.debug,
    .table > tfoot > tr > th.debug,
    .table > thead > tr.debug > td,
    .table > tbody > tr.debug > td,
    .table > tfoot > tr.debug > td,
    .table > thead > tr.debug > th,
    .table > tbody > tr.debug > th,
    .table > tfoot > tr.debug > th
    {
      color: #468847;
      background-color: #dff0d8;
      border-color: #d6e9c6;
    }
    
  .row
    article.col-xs-12.col-sm-12.col-md-12.col-lg-12
      #wid-EventViewer.jarviswidget.jarviswidget-color-blueDark(data-widget-editbutton='false')
        header
          span.widget-icon
            i.fa.fa-table
          h2 Event Viewer
        div
          .jarviswidget-editbox
            input.form-control(type='text')
          .widget-body
            .table-responsive
              table.table.table-striped.table-condensed.table-compressed
               thead
                 th(style={width:'50px'}) Date/Time
                 th(style={width:'50px'}) Type
                 th(style={width:'50px'}) Source
                 th(style={width:'200px'}) Message
               tbody#EventTable

  script.
    var COUNT = 0;
    var NUM_EVENTS = 150;
    var live_arr = new Array(NUM_EVENTS); 
    var log_arr = [];
    
    function downloadCSV(csv, filename) {
    var csvFile;
    var downloadLink;

    // CSV file
    csvFile = new Blob([csv], {type: "text/csv"});

    // Download link
    downloadLink = document.createElement("a");

    // File name
    downloadLink.download = filename;

    // Create a link to the file
    downloadLink.href = window.URL.createObjectURL(csvFile);

    // Hide download link
    downloadLink.style.display = "none";

    // Add the link to DOM
    document.body.appendChild(downloadLink);

    // Click download link
    downloadLink.click();
    }
    
    
    
    function exportTableToCSV() {
        var csv = [];
        var rows = document.querySelectorAll("table tr");
        for (var i = 0; i < rows.length; i++) {
            var row = [], cols = rows[i].querySelectorAll("td, th");
            
            for (var j = 0; j < cols.length; j++){ 
                row.push(cols[j].innerText);
            }
            csv.push(row.join(","));       
        }
        for (var i = 0; i < log_arr.length; i++) {
            var row = []
            var children =log_arr[i][0]['childNodes'];
            for (var j = 0; j < children.length; j++){ 
                
                var tx = children[j].innerText;
                tx=tx.replace(/[\n\r]+/g, '');
                row.push(tx);
            }    
            csv.push(row.join(","));        
        }
    
        // Download CSV file
        
        downloadCSV(csv.join("\n"), 'AIRLINER_LOGS.csv');
    }
    
    
    $(function () {
        
    
      session.subscribeToEvents(function(event) {
      
        if(COUNT>NUM_EVENTS){
            log_arr.push($('#EventTable tr:last'));
            
            //document.querySelector('table tr:last-child td:last-child').remove();
            $('#EventTable tr:last').remove();
            
        }
        $('#EventTable').prepend('<tr>'+
          '<td>'+event.data.generationTimeUTC+'</td>'+
          '<td>'+event.data.type+'</td>'+
          '<td>'+event.data.source+'</td>'+
          '<td>'+event.data.message+'</td>'+
          '</tr>');  
        COUNT++;  
      });
    });



