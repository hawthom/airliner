.row.os-theme-dark(style="margin:5px !important;padding:5px !important")
  article.col-xs-12.col-sm-12(style="font-size:smaller;")
    | Export 
    button.btn.cdr-primary(type='button' title="Export Events as CSV" style="margin:5px 10px !important;font-size: x-small !important;" onclick='exportToCsv()')
      | CSV
      i.fa.fa-file-excel-o(style="margin-left:10px;")
    button.btn.cdr-primary(type='button' title="Export Events as JSON" style="margin:5px 10px !important;font-size: x-small !important;" onclick='exportToJSON()')
      | JSON
      i.fa.fa-file-code-o(style="margin-left:10px;")
    | Events
    span.badge.badge-light.cdr-event-count(style="margin-left:10px;margin-right:10px;cursor: pointer;" onclick='window.EventCount = 0;') 0
    | Errors
    span.badge.badge-danger.cdr-event-error-count(style="margin-left:10px;margin-right:10px;cursor: pointer;" onclick='window.EventErrorCount = 0;') 0
    div.widget-body
      table.table.table-condensed
            thead
              th(style={width:'25%'}) Date/Time
              th(style={width:'10%'}) Type
              th(style={width:'15%'}) Source
              th(style={width:'50%'}) Message
            tbody.cdr-event-table

script.

  if (window.EventLog == undefined){
    window.EventLog = [];
  }

  if (window.EventCount == undefined){
    window.EventCount = 0;
  }

  if (window.EventErrorCount == undefined){
    window.EventErrorCount = 0;
  }

  /* CFE/EVENTS */  
  var CFE_Packet = [
  '/CFE/CFE_EVS_Packet_t/Payload.Spare1',
  '/CFE/CFE_EVS_Packet_t/Payload.PacketID.AppName',
  '/CFE/CFE_EVS_Packet_t/Payload.PacketID.EventType',
  '/CFE/CFE_EVS_Packet_t/Payload.Message',
  '/CFE/CFE_EVS_Packet_t/Payload.PacketID.EventID',
  '/CFE/CFE_EVS_Packet_t/Payload.PacketID.ProcessorID',
  '/CFE/CFE_EVS_Packet_t/Payload.Spare2',
  '/CFE/CFE_EVS_Packet_t/Payload.PacketID.SpacecraftID',
  ]
  
  CFE_Packet.forEach((opsPath)=>{
      
      if( !(opsPath in Object.keys(rogue_subscriptions)) ){
        setRogueSubsc(opsPath,'text','.cdr-event-table');
      }
  });


  session.subscribe([
    {name:'/CFE/CFE_EVS_Packet_t/Payload.Spare1'},
    {name:'/CFE/CFE_EVS_Packet_t/Payload.PacketID.AppName'},
    {name:'/CFE/CFE_EVS_Packet_t/Payload.PacketID.EventType'},
    {name:'/CFE/CFE_EVS_Packet_t/Payload.Message'},
    {name:'/CFE/CFE_EVS_Packet_t/Payload.PacketID.EventID'},
    {name:'/CFE/CFE_EVS_Packet_t/Payload.PacketID.ProcessorID'},
    {name:'/CFE/CFE_EVS_Packet_t/Payload.Spare2'},
    {name:'/CFE/CFE_EVS_Packet_t/Payload.PacketID.SpacecraftID'},
  ], (paramArr)=>{
    
    try {
      var orderedTablerowStrArray = {}
      
      paramArr.forEach((fieldObj)=>{
        
          
          switch (fieldObj.opsPath){
            
            case '/CFE/CFE_EVS_Packet_t/Payload.Spare1':
              break;
            
            case '/CFE/CFE_EVS_Packet_t/Payload.PacketID.AppName':
            
              orderedTablerowStrArray['APPNAME'] = (fieldObj.sample[fieldObj.sample.length -1]).value;
              
              break;
            
            case '/CFE/CFE_EVS_Packet_t/Payload.PacketID.EventType':
            
                var eventType = (fieldObj.sample[fieldObj.sample.length -1]).value;
                /* get event type */
                switch(eventType){
                  case 1:
                    orderedTablerowStrArray['EVENTTYPE'] = 'DEBUG';
                    break;
                  case 2:
                    orderedTablerowStrArray['EVENTTYPE'] = 'INFO';
                    break;
                  case 3:
                    orderedTablerowStrArray['EVENTTYPE'] = 'ERROR';
                    window.EventErrorCount += 1;
                    break;
                  case 4:
                    orderedTablerowStrArray['EVENTTYPE'] = 'CRITICAL';
                    window.EventErrorCount += 1;
                    break;
                  default:
                    orderedTablerowStrArray['EVENTTYPE'] = 'UNKNOWN';
                    break;
                }
                /* get ground time */
                orderedTablerowStrArray['GRNDTIME'] = (fieldObj.sample[fieldObj.sample.length -1]).gndTime;
              break;
            
            case '/CFE/CFE_EVS_Packet_t/Payload.Message':
            
              orderedTablerowStrArray['MSG'] = (fieldObj.sample[fieldObj.sample.length -1]).value;
              
              break;
            
            case '/CFE/CFE_EVS_Packet_t/Payload.PacketID.EventID':
            
              orderedTablerowStrArray['EVENTID'] = (fieldObj.sample[fieldObj.sample.length -1]).value;
              
              break;
            
            case '/CFE/CFE_EVS_Packet_t/Payload.PacketID.ProcessorID':
            
              orderedTablerowStrArray['PROCID'] = (fieldObj.sample[fieldObj.sample.length -1]).value;
              
              break;
            
            case '/CFE/CFE_EVS_Packet_t/Payload.Spare2':
              break;
            
            case '/CFE/CFE_EVS_Packet_t/Payload.PacketID.SpacecraftID':
            
              orderedTablerowStrArray['SPCRFTID'] = (fieldObj.sample[fieldObj.sample.length -1]).value;
              
              break;
            
            default:
              break;                
          }
      
      });
      
      if (window.EventLog != undefined){
        window.EventLog.push(orderedTablerowStrArray);
      }
      
      window.EventCount += 1;
      
      $('.cdr-event-count').text(window.EventCount);
      
      $('.cdr-event-error-count').text(window.EventErrorCount);
      
      $('.cdr-event-table').prepend(
        '<tr>'+
        '<td>'+ orderedTablerowStrArray['GRNDTIME'] +'</td>'+
        '<td>'+ orderedTablerowStrArray['EVENTTYPE'] +'</td>'+
        '<td>'+ orderedTablerowStrArray['SPCRFTID'] + ' / ' + orderedTablerowStrArray['PROCID'] + ' / ' + orderedTablerowStrArray['APPNAME'] +'</td>'+
        '<td>'+ orderedTablerowStrArray['EVENTID'] + ' / ' + orderedTablerowStrArray['MSG'] +'</td>'+
        '</tr>'
      );

      if( $('.cdr-event-table').children().length > 50 ){
        $('.cdr-event-table tr:last').remove();
      }
    }
    catch(e){
      
      cu.logError("RogueSubscribe | unable to process CFE Events msg. error= ",e.message);
      
    }
     
  });
