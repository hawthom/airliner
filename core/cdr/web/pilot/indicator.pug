style.
  .pfd-indicator-class {
    display: block;
    background: var(--td-bg-color);
    border: 1px solid var(--td-border-color) !important;
    margin: 5px;
    border-radius: 5px;
    padding: 6px;
    overflow: hidden;
    min-width:135px;
    max-width:500px;
  }

  .pfd-indicator{
    text-align: center;
    display:grid;
  }
  .pfd-ind-label{
    text-align: center;
    padding: 5px;
    font-size: small;
    font-weight: bold;
  }
  .pfd-indicator > span {
    margin: 2px;
  }
  .pfd-outline-green {
    padding: 0px 2px;
    border-radius:5px;
    font-size: 10px;
    color: var(--btn-ssb-txt-inactive-color);
    background-color: var(--btn-trasperant-color);
    border: 1px solid var(--btn-ssb-txt-inactive-color);
  }
  .pfd-outline-green.active {
    color: var(--btn-ssb-text-active-color);
    background-color: var(--btn-trasperant-color);
    border: 1px solid var(--btn-ssb-border-hover-active-color);
  }
.row.os-theme-dark
  article.col-xs-12.col-sm-12
    div.widget-body
      table.table.table-condensed
        tbody
          tr
            td.pfd-ld-initialized.pfd-indicator-class
              .pfd-ind-label  LAND DETECTOR
              .pfd-indicator
                span.pfd-outline-green(data-info="DETECTED") LANDED
          tr
            td.pfd-lg-initialized.pfd-indicator-class
              .pfd-ind-label  LANDING GEAR
              .left.pfd-indicator(style='width: 50%;')
                span.pfd-outline-green(data-info="EXTENDED") EXTENDED
              .right.pfd-indicator(style='width: 50%;')
                span.pfd-outline-green(data-info="RETRACTED") RETRACTED
          tr    
            td.pfd-pe-initialized.pfd-indicator-class
              .pfd-ind-label  POSITION ESTIMATOR
              .pfd-indicator
                span.pfd-outline-green(data-info="INITIALIZED") INITIALIZED
          tr    
            td.pfd-arm-initialized.pfd-indicator-class
              .pfd-ind-label  ARM STATE
              .left.pfd-indicator(style='width: 50%;')
                span.pfd-outline-green(data-info="ARM") ARMED
              .right.pfd-indicator(style='width: 50%;')
                span.pfd-outline-green(data-info="DISARM") DISARMED
          tr    
            td.pfd-mode-initialized.pfd-indicator-class
              .pfd-ind-label  NAV MODE
              .left.pfd-indicator(style='width: 50%;')
                  span.pfd-outline-green(data-info="MANUAL") MANUAL
                  span.pfd-outline-green(data-info="POSCTL") POSCTL
                  span.pfd-outline-green(data-info="ALTCTL") ALTCTL
                  span.pfd-outline-green(data-info="AUTO TAKEOFF") AUTO TAKEOFF
              .right.pfd-indicator(style='width: 50%;')
                  span.pfd-outline-green(data-info="AUTO LAND") AUTO LAND
                  span.pfd-outline-green(data-info="AUTO LOITER") AUTO LOITER
                  span.pfd-outline-green(data-info="AUTO RTL") AUTO RTL
          
script.
  setTimeout(()=>{
    
    /* LD Detected ? */  
    session.subscribe([{name:'/PX4/PX4_VehicleLandDetectedMsg_t/Landed'}], (paramArr)=>{
        try {
          var param = paramArr[0];
          var sample = param.sample[param.sample.length - 1];
          var value = sample.value;
          $('.pfd-ld-initialized').find('.pfd-outline-green').removeClass('active');
          if(value) {
            $('.pfd-ld-initialized').find('[data-info="DETECTED"]').addClass('active')
          }
      }
      catch(e){
        cu.logError("RogueSubscribe | unable to process response. error= ",e.message)
      } 
    });
    
    /* PE Initialized ? */  
    session.subscribe([{name:'/PE/PE_HkTlm_t/EstimatorGlobalInitialized'}], (paramArr)=>{
        try {
          var param = paramArr[0];
          var sample = param.sample[param.sample.length - 1];
          var value = sample.value;
          $('.pfd-pe-initialized').find('.pfd-outline-green').removeClass('active');
          if(value) {
            $('.pfd-pe-initialized').find('[data-info="INITIALIZED"]').addClass('active')
          }
        }
        catch(e){
          cu.logError("RogueSubscribe | unable to process response. error= ",e.message)
        } 
      });
    
    /* ARM State ? */  
      session.subscribe([{name:'/VM/VM_HkTlm_t/ArmingState'}], (paramArr)=>{
        try {
          var param = paramArr[0];
          var sample = param.sample[param.sample.length - 1];
          var value = sample.value;
          $('.pfd-arm-initialized').find('.pfd-outline-green').removeClass('active');
          if(value == 1) {
            $('.pfd-arm-initialized').find('[data-info="DISARM"]').addClass('active')
          }
          else if(value == 2) {
            $('.pfd-arm-initialized').find('[data-info="ARM"]').addClass('active')
          }
        }
        catch(e){
          cu.logError("RogueSubscribe | unable to process response. error= ",e.message)
        } 
      });
    
    /* NAV State ? */  
      session.subscribe([{name:'/VM/VM_HkTlm_t/NavState'}], function(paramArr) {
        try {
          var param = paramArr[0];
          var sample = param.sample[param.sample.length - 1];
          var value = sample.value;
          $('.pfd-mode-initialized').find('.pfd-outline-green').removeClass('active');
          switch(value) {
            case 0 :{
              $('.pfd-mode-initialized').find('[data-info="MANUAL"]').addClass('active');
              break;
            }
            case 1 :{
              $('.pfd-mode-initialized').find('[data-info="ALTCTL"]').addClass('active');
              break;
            }
            case 2 :{
              $('.pfd-mode-initialized').find('[data-info="POSCTL"]').addClass('active');
              break;
            }
            case 3 :{
              $('.pfd-mode-initialized').find('[data-info="AUTO LOITER"]').addClass('active');
              break;
            }
            case 4 :{
              $('.pfd-mode-initialized').find('[data-info="AUTO RTL"]').addClass('active');
              break;
            }
            case 8 :{
              $('.pfd-mode-initialized').find('[data-info="AUTO TAKEOFF"]').addClass('active');
              break;
            }
            case 9 :{
              $('.pfd-mode-initialized').find('[data-info="AUTO LAND"]').addClass('active');
              break;
            }
          }
        }
        catch(e){
          cu.logError("RogueSubscribe | unable to process response. error= ",e.message)
        } 
      });
  },2000);
  


  
