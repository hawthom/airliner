# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: _py_CFE_ES_CDSBlockDesc_t.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='_py_CFE_ES_CDSBlockDesc_t.proto',
  package='',
  serialized_pb=_b('\n\x1f_py_CFE_ES_CDSBlockDesc_t.proto\"\x85\x01\n\x18\x43\x46\x45_ES_CDSBlockDesc_t_pb\x12\x10\n\x08SizeUsed\x18\x01 \x02(\r\x12\x12\n\nActualSize\x18\x02 \x02(\r\x12\x11\n\tCheckBits\x18\x03 \x02(\r\x12\x0c\n\x04Next\x18\x04 \x02(\r\x12\x0b\n\x03\x43RC\x18\x05 \x02(\r\x12\x15\n\rAllocatedFlag\x18\x06 \x02(\r')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_CFE_ES_CDSBLOCKDESC_T_PB = _descriptor.Descriptor(
  name='CFE_ES_CDSBlockDesc_t_pb',
  full_name='CFE_ES_CDSBlockDesc_t_pb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='SizeUsed', full_name='CFE_ES_CDSBlockDesc_t_pb.SizeUsed', index=0,
      number=1, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ActualSize', full_name='CFE_ES_CDSBlockDesc_t_pb.ActualSize', index=1,
      number=2, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='CheckBits', full_name='CFE_ES_CDSBlockDesc_t_pb.CheckBits', index=2,
      number=3, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Next', full_name='CFE_ES_CDSBlockDesc_t_pb.Next', index=3,
      number=4, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='CRC', full_name='CFE_ES_CDSBlockDesc_t_pb.CRC', index=4,
      number=5, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='AllocatedFlag', full_name='CFE_ES_CDSBlockDesc_t_pb.AllocatedFlag', index=5,
      number=6, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=36,
  serialized_end=169,
)

DESCRIPTOR.message_types_by_name['CFE_ES_CDSBlockDesc_t_pb'] = _CFE_ES_CDSBLOCKDESC_T_PB

CFE_ES_CDSBlockDesc_t_pb = _reflection.GeneratedProtocolMessageType('CFE_ES_CDSBlockDesc_t_pb', (_message.Message,), dict(
  DESCRIPTOR = _CFE_ES_CDSBLOCKDESC_T_PB,
  __module__ = '_py_CFE_ES_CDSBlockDesc_t_pb2'
  # @@protoc_insertion_point(class_scope:CFE_ES_CDSBlockDesc_t_pb)
  ))
_sym_db.RegisterMessage(CFE_ES_CDSBlockDesc_t_pb)


# @@protoc_insertion_point(module_scope)
