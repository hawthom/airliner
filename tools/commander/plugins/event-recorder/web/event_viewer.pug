- var pluginName = query.pluginName;
    
table.table.table-condensed#eventTable
  thead
    tr
      th(style="width: 50px;") Gnd Time
      th(style="width: 50px;") Vehicle Time
      th(style="width: 75px;") App Name
      th(style="width: 50px;") ID
      th(style="width: 50px;") Type
      th(style="width: 75px;") Vehicle ID
      th(style="width: 75px;") Proc ID
      th                       Text
  tbody
      
script.      
    'use strict';
    
        var isInitialized = false;
        var eventCount = 0;      
        var eventTableUpdated = false;
        
        var pluginName = '#{pluginName}';
                
        var initEventTable = function() {  
            var ajaxPath = 'plugin/event-recorder/events';  
            
            var processEventMessage = function (tlmObj) {
                var inEventMsg = tlmObj[0].sample[0];
                var eventObj = {
                    gndTime:     inEventMsg.gndTime,
                    vehicleTime: inEventMsg.msgTime,
                    appName:     trimNull(inEventMsg.value.PacketID.AppName),
                    eventID:     inEventMsg.value.PacketID.EventID,
                    vehicleID:   inEventMsg.value.PacketID.SpacecraftID,
                    processorID: inEventMsg.value.PacketID.ProcessorID,
                    text:        trimNull(inEventMsg.value.Message)
                };
               
                switch(inEventMsg.value.PacketID.EventType) {
                    case 1:
                        eventObj.eventType = 'DEBUG';
                        break;
                
                    case 2:
                        eventObj.eventType = 'INFO';
                        break;
                
                    case 3:
                        eventObj.eventType = 'ERROR';
                        break;

                    case 4:
                        eventObj.eventType = 'CRIT';
                        break;
                
                    default:
                        eventObj.eventType = '<UNKNOWN>';
                }
                
                eventTable.push(eventObj);
                eventTableUpdated = true;
            };

            var eventTable = $('#eventTable').DataTable({          
                processing: false,
                serverSide: true,
                ajax: {
                    url: ajaxPath,
                    dataSrc: 'eventList'
                },
                ordering:   false,
                searching:  false,       
                paging:     true,
                info:       false,
                lengthMenu: [[100, 500, 2000, -1], [100, 500, 2000, "All"]],
                pageLength: 100, 
                dom: 'lfrtBip', 
                buttons: [
                    {
                        extend: 'csvHtml5',
                        title: 'events'
                    },
                    {
                        extend: 'excelHtml5',
                        title: 'events'
                    },
                ],
                columns: [ 
                    { data : "gndTime" },
                    { data : "vehicleTime" },
                    { data : "appName" },
                    { data : "eventID" },
                    { data : "eventType" },        
                    { data : "vehicleID" },        
                    { data : "processorID" },       
                    { data : "text" }
                ],
                createdRow: function( row, data, dataIndex){
                    switch( data.eventType ) {
                        case 'DEBUG':
                            $(row).addClass('eventTypeDebug');
                            break;
                            
                        case 'INFO':
                            $(row).addClass('eventTypeInfo');
                            break;
                            
                        case 'ERROR':
                            $(row).addClass('eventTypeError');
                            break;
                            
                        default:
                            $(row).addClass('eventTypeCrit');
                            break;
                    }       
                }
            });

            function trimNull(a) {
                var c = a.indexOf('\0');
                if (c>-1) {
                    return a.substr(0, c);
                }
                return a;
            }
            
            session.subscribe([{name:'/CFE/CFE_EVS_Packet_t/Payload'}], processEventMessage );
        
            setInterval(function() {
                if(eventTableUpdated == true) {
                    eventTableUpdated = false;
                    var currentPage = eventTable.page();
                    eventTable.draw('page');
                    eventTable.page(currentPage);
                };
            }, 1000);
        }
        
        initEventTable();